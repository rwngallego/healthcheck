{"version":3,"sources":["components/service/create/ServiceCreateForm.js","components/user/selector/UserSelector.js","components/section/header/SectionHeader.js","components/section/sider/SectionSider.js","components/service/status/ServiceStatus.js","components/service/list/ServicesList.js","lib/ApiClient.js","App.js","reportWebVitals.js","index.js"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","ServiceCreateForm","onSubmit","Form","useForm","form","resetFormIfSucceeded","result","resetFields","onFinish","values","then","Item","label","name","rules","required","message","placeholder","tooltip","type","htmlType","icon","PlusCircleOutlined","Option","Select","UserSelector","users","onUserChange","defaultActiveFirstOption","className","onChange","map","user","value","id","Header","Layout","SectionHeader","Sider","SectionSider","onRefresh","style","overflow","height","position","left","onClick","ReloadOutlined","ServiceStatus","url","createdAt","updatedAt","status","content","getInfo","title","trigger","percent","getPercent","getStatus","href","ServicesList","services","grid","gutter","column","dataSource","renderItem","item","created_at","updated_at","baseUrl","Content","App","useState","setUsers","userId","setUserId","setServices","useEffect","loadUsers","loadServices","axios","get","res","data","catch","warnOnNetworkError","GetServices","err","notification","open","description","WarningOutlined","subTitle","service","post","CreateService","SmileOutlined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae4c85cd.chunk.js","sourcesContent":["import { Form, Input, Button } from \"antd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\n\nimport \"./ServiceCreateForm.css\";\n\nconst layout = {\n  labelCol: {\n    span: 2,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\n\nconst tailLayout = {\n  wrapperCol: {\n    offset: 2,\n  },\n};\n\nexport default function ServiceCreateForm({ onSubmit }) {\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    onSubmit(values).then(resetFormIfSucceeded);\n  };\n\n  const resetFormIfSucceeded = (result) => {\n    if (result === true) {\n      form.resetFields();\n    }\n  };\n\n  return (\n    <Form form={form} onFinish={onFinish} {...layout}>\n      <Form.Item\n        label=\"Name\"\n        name=\"name\"\n        rules={[\n          {\n            required: true,\n            message: \"Name is required\",\n          },\n        ]}\n      >\n        <Input placeholder=\"RabbitMQ\" />\n      </Form.Item>\n      <Form.Item\n        label=\"Url\"\n        name=\"url\"\n        tooltip=\"Accepted format 'protocol://host:port/path?query'\"\n        rules={[\n          {\n            required: true,\n            message: \"Url is required\",\n          },\n        ]}\n      >\n        <Input placeholder=\"http://127.0.0.1:8080/monitor\" />\n      </Form.Item>\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\" icon={<PlusCircleOutlined />}>\n          Create\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import { Select } from \"antd\";\nimport \"./UserSelector.css\";\n\nconst { Option } = Select;\n\nexport default function UserSelector({ users, onUserChange }) {\n  return (\n    <div>\n      User:&nbsp;\n      <Select\n        defaultActiveFirstOption={true}\n        className=\"user-selector-select\"\n        onChange={onUserChange}\n      >\n        {users.map((user) => (\n          <Option key={user.id} value={user.id}>\n            {user.name}\n          </Option>\n        ))}\n      </Select>\n    </div>\n  );\n}\n","import { Layout } from \"antd\";\nimport UserSelector from \"../../user/selector/UserSelector\";\n\nimport \"./SectionHeader.css\";\n\nconst { Header } = Layout;\n\nexport default function SectionHeader({ users, onUserChange }) {\n  return (\n    <Header className=\"header-section\">\n      <UserSelector users={users} onUserChange={onUserChange} />\n    </Header>\n  );\n}\n","import { Button, Layout } from \"antd\";\nimport { ReloadOutlined } from \"@ant-design/icons\";\n\nimport \"./SectionSider.css\";\n\nconst { Sider } = Layout;\n\nexport default function SectionSider({ onRefresh }) {\n  return (\n    <Sider\n      className=\"sider-section\"\n      style={{\n        overflow: \"auto\",\n        height: \"100vh\",\n        position: \"fixed\",\n        left: 0,\n      }}\n    >\n      <Button\n        type=\"default\"\n        htmlType=\"submit\"\n        onClick={onRefresh}\n        icon={<ReloadOutlined />}\n      >\n        Refresh\n      </Button>\n    </Sider>\n  );\n}\n","import { Progress, Popover } from \"antd\";\n\nimport \"./ServiceStatus.css\";\n\nexport default function ServiceStatus({ url, createdAt, updatedAt, status }) {\n  const getInfo = (createdAt, updatedAt) => {\n    return (\n      <div>\n        <div>Created: {createdAt}</div>\n        <div>Last update: {updatedAt}</div>\n      </div>\n    );\n  };\n\n  const getPercent = (status) => {\n    return status === \"UNKNOWN\" ? 0 : 100;\n  };\n\n  const getStatus = (status) => {\n    return status === \"FAIL\" ? \"exception\" : \"\";\n  };\n\n  return (\n    <div>\n      <Popover\n        content={getInfo(createdAt, updatedAt)}\n        title=\"More information\"\n        trigger=\"hover\"\n      >\n        <Progress\n          type=\"circle\"\n          percent={getPercent(status)}\n          status={getStatus(status)}\n        />\n        <div>\n          <a className=\"status-url\" href={url}>\n            {url}\n          </a>\n        </div>\n      </Popover>\n    </div>\n  );\n}\n","import { Card, List } from \"antd\";\nimport ServiceStatus from \"../status/ServiceStatus\";\n\nimport \"./ServicesList.css\";\n\nexport default function ServicesList({ services }) {\n  return (\n    <List\n      grid={{ gutter: 16, column: 4 }}\n      dataSource={services}\n      renderItem={(item) => (\n        <List.Item>\n          <Card title={item.name}>\n            <ServiceStatus\n              name={item.name}\n              url={item.url}\n              createdAt={item.created_at}\n              updatedAt={item.updated_at}\n              status={item.status}\n            />\n          </Card>\n        </List.Item>\n      )}\n    />\n  );\n}\n","import axios from \"axios\";\nconst baseUrl = `http://127.0.0.1:8888/api/v1`;\n\nexport function GetUsers() {\n  return axios.get(`${baseUrl}/users`).then((res) => {\n    return res.data;\n  });\n}\n\nexport function GetServices(userId) {\n  return axios.get(`${baseUrl}/users/${userId}/services`).then((res) => {\n    return res.data;\n  });\n}\n\nexport function CreateService(userId, service) {\n  return axios\n    .post(`${baseUrl}/users/${userId}/services`, service)\n    .then((res) => {\n      return res.data;\n    });\n}\n","import { useEffect, useState } from \"react\";\nimport { Layout, notification, PageHeader } from \"antd\";\nimport { SmileOutlined, WarningOutlined } from \"@ant-design/icons\";\nimport ServiceCreateForm from \"./components/service/create/ServiceCreateForm\";\nimport SectionHeader from \"./components/section/header/SectionHeader\";\nimport SectionSider from \"./components/section/sider/SectionSider\";\nimport ServicesList from \"./components/service/list/ServicesList\";\nimport { CreateService, GetServices, GetUsers } from \"./lib/ApiClient\";\n\nimport \"./App.css\";\n\nconst { Content } = Layout;\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [userId, setUserId] = useState(0);\n  const [services, setServices] = useState([]);\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  useEffect(() => {\n    loadServices(userId);\n  }, [userId]);\n\n  const loadUsers = () => {\n    GetUsers()\n      .then((result) => {\n        setUsers(result);\n      })\n      .catch(warnOnNetworkError);\n  };\n\n  const loadServices = (userId) => {\n    GetServices(userId)\n      .then((result) => {\n        setServices(result);\n      })\n      .catch(warnOnNetworkError);\n  };\n\n  const userChanged = (id) => {\n    setUserId(id);\n  };\n\n  const contentRefreshed = () => {\n    loadUsers();\n    loadServices(userId);\n  };\n\n  const formSubmitted = (data) => {\n    return CreateService(userId, { ...data })\n      .then(() => {\n        loadServices(userId);\n        notification.open({\n          message: \"Service created\",\n          description: \"The service was correctly created\",\n          icon: <SmileOutlined />,\n        });\n        return true;\n      })\n      .catch(() => {\n        notification.open({\n          message: \"Operation failed\",\n          description: \"Could not create the service\",\n          icon: <WarningOutlined />,\n        });\n        return false;\n      });\n  };\n\n  const warnOnNetworkError = (err) => {\n    notification.open({\n      message: \"Operation failed\",\n      description: \"Could not connect to the server\",\n      icon: <WarningOutlined />,\n    });\n  };\n\n  return (\n    <Layout>\n      <Layout>\n        <SectionSider onRefresh={contentRefreshed} />\n        <Layout className=\"App-layout\">\n          <SectionHeader users={users} onUserChange={userChanged} />\n          <Content>\n            <PageHeader\n              title=\"Add service\"\n              subTitle=\"Add a new service with name and URL\"\n            />\n\n            <ServiceCreateForm onSubmit={formSubmitted} />\n\n            <PageHeader title=\"Monitored services\" />\n\n            <ServicesList services={services} />\n          </Content>\n        </Layout>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}